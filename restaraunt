<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Hotel & Dining POS</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #ccc;
      color: #000;
      margin: 0;
      padding: 20px;
    }
    h1 {
      text-align: center;
      margin-bottom: 15px;
    }
    .container {
      display: flex;
      gap: 20px;
      width: 100%;
    }
    .section {
      flex: 1;
      background: #eee;
      border: 2px solid #000;
      padding: 15px;
      border-radius: 6px;
    }
    .section h2 {
      margin-top: 0;
      border-bottom: 2px solid #000;
      padding-bottom: 5px;
    }
    .rooms, .tables {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
      gap: 10px;
    }
    .room, .table {
      padding: 10px;
      text-align: center;
      border: 2px solid #000;
      border-radius: 5px;
      background: #ddd;
      cursor: pointer;
    }
    .room.vacant { background: #bfb; }
    .room.occupied { background: #fbb; }
    .room.cleaning { background: #ff8; }
    .room input {
      margin-top: 5px;
      width: 90%;
      font-size: 12px;
    }
    .orders, .kitchen-orders {
      margin-top: 10px;
      background: #fff;
      border: 1px solid #000;
      padding: 8px;
      height: 200px;
      overflow-y: auto;
      font-size: 14px;
    }
    button {
      background: #333;
      color: #fff;
      border: 1px solid #000;
      padding: 6px 12px;
      margin-top: 5px;
      font-weight: bold;
      border-radius: 4px;
      cursor: pointer;
    }
    button:hover { background: #555; }
    .order-btns { margin-top: 8px; display: flex; flex-wrap: wrap; gap: 5px; }
    .total { margin-top: 10px; font-weight: bold; }

    /* Modal for cash counter */
    .modal {
      display: none;
      position: fixed;
      top: 0; left: 0;
      width: 100%; height: 100%;
      background: rgba(0,0,0,0.6);
      justify-content: center;
      align-items: center;
    }
    .modal-content {
      background: #eee;
      border: 2px solid #000;
      padding: 15px;
      border-radius: 6px;
      width: 320px;
    }
    .cash-grid {
      display: grid;
      grid-template-columns: 1fr 60px;
      gap: 6px;
      align-items: center;
    }
    .cash-grid input {
      width: 100%;
      padding: 2px;
      text-align: right;
    }
    .close-btn {
      float: right;
      background: #900;
      color: #fff;
    }
  </style>
</head>
<body>
  <h1>Hotel & Dining POS</h1>
  <div class="container">
    <!-- Hotel Section -->
    <div class="section">
      <h2>Hotel Rooms</h2>
      <div class="rooms" id="rooms"></div>
    </div>

    <!-- Dining Section -->
    <div class="section">
      <h2>Dining Tables</h2>
      <div class="tables" id="tables"></div>
      <div class="orders" id="orders">
        <strong>Orders:</strong><br>
        None yet
      </div>
      <div class="total" id="total">Total: $0.00</div>
      <button onclick="payBill()">Pay Bill</button>
      <button onclick="openCashCounter()">Cash Counter</button>
      <div class="order-btns">
        <button onclick="addOrder('Burger', 12)">Burger $12</button>
        <button onclick="addOrder('Pizza', 15)">Pizza $15</button>
        <button onclick="addOrder('Salad', 8)">Salad $8</button>
        <button onclick="addOrder('Soda', 3)">Soda $3</button>
      </div>
    </div>

    <!-- Kitchen Section -->
    <div class="section">
      <h2>Kitchen Orders</h2>
      <div class="kitchen-orders" id="kitchen"></div>
    </div>
  </div>

  <!-- Cash Counter Modal -->
  <div class="modal" id="cashModal">
    <div class="modal-content">
      <button class="close-btn" onclick="closeCashCounter()">X</button>
      <h3>Cash Counter</h3>
      <div class="cash-grid">
        <label>$100:</label><input type="number" min="0" id="bill100" value="0">
        <label>$50:</label><input type="number" min="0" id="bill50" value="0">
        <label>$20:</label><input type="number" min="0" id="bill20" value="0">
        <label>$10:</label><input type="number" min="0" id="bill10" value="0">
        <label>$5:</label><input type="number" min="0" id="bill5" value="0">
        <label>$1:</label><input type="number" min="0" id="bill1" value="0">
        <label>Quarters:</label><input type="number" min="0" id="quarter" value="0">
        <label>Dimes:</label><input type="number" min="0" id="dime" value="0">
        <label>Nickels:</label><input type="number" min="0" id="nickel" value="0">
        <label>Pennies:</label><input type="number" min="0" id="penny" value="0">
      </div>
      <div class="total" id="cashTotal">Total: $0.00</div>
      <button onclick="calculateCash()">Calculate</button>
    </div>
  </div>

  <script>
    // --- Hotel Section ---
    const roomContainer = document.getElementById('rooms');
    const roomData = Array.from({length: 8}, (_, i) => ({
      id: i + 1,
      price: (50 + i * 10),
      status: 'vacant',
      guest: ''
    }));

    function renderRooms() {
      roomContainer.innerHTML = '';
      roomData.forEach(room => {
        const div = document.createElement('div');
        div.className = `room ${room.status}`;
        div.innerHTML = `Room ${room.id}<br>$${room.price}<br>${room.status}`;
        if (room.status === 'occupied') {
          div.innerHTML += `<br><input type="text" placeholder="Guest" value="${room.guest}" 
            oninput="roomData[${room.id - 1}].guest=this.value">`;
        }
        div.onclick = () => {
          if (room.status === 'vacant') room.status = 'occupied';
          else if (room.status === 'occupied') room.status = 'cleaning';
          else { room.status = 'vacant'; room.guest=''; }
          renderRooms();
        };
        roomContainer.appendChild(div);
      });
    }
    renderRooms();

    // --- Dining Section ---
    const tableContainer = document.getElementById('tables');
    const ordersBox = document.getElementById('orders');
    const kitchenBox = document.getElementById('kitchen');
    const tables = Array.from({length: 6}, (_, i) => ({
      id: i + 1,
      occupied: false,
      orders: []
    }));

    function renderTables() {
      tableContainer.innerHTML = '';
      tables.forEach(table => {
        const div = document.createElement('div');
        div.className = `table`;
        div.innerText = `Table ${table.id}\n${table.occupied ? 'Occupied' : 'Free'}`;
        div.style.background = table.occupied ? '#fbb' : '#bfb';
        div.onclick = () => {
          table.occupied = !table.occupied;
          renderTables();
        };
        tableContainer.appendChild(div);
      });
    }
    renderTables();

    let activeTable = tables[0]; // default table

    function addOrder(item, price) {
      activeTable.occupied = true;
      activeTable.orders.push({item, price});
      renderTables();
      renderOrders();
      renderKitchen();
    }

    function renderOrders() {
      if (!activeTable || activeTable.orders.length === 0) {
        ordersBox.innerHTML = "<strong>Orders:</strong><br>None yet";
        document.getElementById('total').innerText = "Total: $0.00";
        return;
      }
      ordersBox.innerHTML = "<strong>Orders:</strong><br>" +
        activeTable.orders.map(o => `${o.item} - $${o.price}`).join("<br>");
      const total = activeTable.orders.reduce((sum, o) => sum + o.price, 0);
      document.getElementById('total').innerText = "Total: $" + total.toFixed(2);
    }

    function renderKitchen() {
      kitchenBox.innerHTML = activeTable.orders.map((o, idx) =>
        `<div>${o.item} - $${o.price} 
          <button onclick="removeKitchenOrder(${idx})">Done</button></div>`
      ).join('') || "No pending orders.";
    }

    function removeKitchenOrder(index) {
      activeTable.orders.splice(index, 1);
      renderOrders();
      renderKitchen();
    }

    function payBill() {
      if (activeTable.orders.length === 0) {
        alert("No orders to pay for!");
        return;
      }
      const total = activeTable.orders.reduce((sum, o) => sum + o.price, 0);
      alert("Payment of $" + total.toFixed(2) + " received.");
      activeTable.orders = [];
      activeTable.occupied = false;
      renderOrders();
      renderTables();
      renderKitchen();
    }

    // --- Cash Counter ---
    function openCashCounter() {
      document.getElementById('cashModal').style.display = 'flex';
    }
    function closeCashCounter() {
      document.getElementById('cashModal').style.display = 'none';
    }
    function calculateCash() {
      const values = {
        bill100: 100, bill50: 50, bill20: 20, bill10: 10, bill5: 5, bill1: 1,
        quarter: 0.25, dime: 0.1, nickel: 0.05, penny: 0.01
      };
      let total = 0;
      for (let id in values) {
        total += document.getElementById(id).value * values[id];
      }
      document.getElementById('cashTotal').innerText = "Total: $" + total.toFixed(2);
    }
  </script>
</body>
</html>
